#!/usr/bin/env python3
"""
Write info about the system to a FOLDER/system_details.pickle.

Usage:
    info.py DIR [options]

Options:
    -h, --help               Show this help.
    -c, --concurrent=N       Specify number of simultaenous runs jobs.
    -q, --qst=QST            Specify QST version.
    -r, --runs=N             Specify number of runs
    -t, --total=N            Specify total number of jobs


Description:
    concurrent      - number of jobs running simultaneously.
    runs            - the number of times to run a single input.
                      Done internally by QST.
    total_num_jobs  - number of jobs generated by src/jobs.py
    total_num_sorts - number of actual sorts taking place
                      (runs * total_num_jobs) over the entire experiment.
"""
import json
import multiprocessing
import platform
from pathlib import Path

from docopt import docopt


def write_info(
    output_folder,
    command=None,
    concurrent="slurm",
    data_details_path=None,
    qst_vers="",
    runs=0,
    total_num_jobs=0,
    total_num_sorts=0,
):
    """Write system information to output_folder/job_details.json."""
    if data_details_path is not None and data_details_path.is_file():
        with open(data_details_path, "r") as data_details_file:
            data_details = json.load(data_details_file)

    info = {
        "Architecture": platform.architecture(),
        "Command": command,
        "Data Details": data_details,
        "Machine": platform.machine(),
        "Node": platform.node(),
        "Number of CPUs": multiprocessing.cpu_count(),
        "Number of concurrent jobs": concurrent,
        "Platform": platform.platform(),
        "Processor": platform.processor(),
        "QST Version": qst_vers,
        "Release": platform.release(),
        "Runs": runs,
        "System": platform.system(),
        "Total number of jobs": total_num_jobs,
        "Total number of sorts": total_num_sorts,
        "Version": platform.version(),
    }

    with open(Path(output_folder, "job_details.json"), "w") as f:
        json.dump(info, f, indent=4)


if __name__ == "__main__":
    args = docopt(__doc__)
    OUT_DIR = Path(args.get("DIR"))

    concurrent = args.get("--concurrent") or 1
    concurrent = int(concurrent)

    total_num_jobs = args.get("--total") or 0
    total_num_jobs = int(total_num_jobs)

    runs = args.get("--runs") or 1
    runs = int(runs)

    write_info(
        OUT_DIR,
        concurrent=concurrent,
        qst_vers=args.get("--qst"),
        runs=runs,
        total_num_jobs=total_num_jobs,
        total_num_sorts=total_num_jobs * runs,
    )
